#!/usr/bin/env perl

use strict;
use warnings;

use Getopt::Long;
use Plack::Loader;
use YAML;

require Dancer;

my %options = (
    config      => 'commentary.yml',
    debug       => 0,
    port        => 3000,
    sitedir     => '_site',
);

GetOptions(\%options,
    'config|c=s',
    'debug!',
    'port=i',
    'sitedir|s=s',
);

if (!-e $options{config}) {
    print STDERR "Configuration file '$options{config}' not found\n";
    exit 1;
}

my $config;
eval {
    $config = YAML::LoadFile($options{config});
    1;
}
or do {
    print STDERR "Couldn't load configuration file '$options{config}'\n";
    exit 1;
};

$ENV{DANCER_PUBLIC} = $options{sitedir};

Dancer->import;

Dancer::Config->load;

if (exists $config->{auth}) {
    # Pass auth configuration settings to Dancer::Plugin::Commentary
    Dancer::config()->{plugins}{Commentary}{auth} = {
        %{ Dancer::config()->{plugins}{Commentary}{auth} || {} },
        %{ $config->{auth} },
    };

    delete $config->{auth};
}

if (exists $config->{storage}) {
    Dancer::config()->{plugins}{Commentary}{storage} = delete($config->{storage});
    Dancer::config()->{plugins}{Commentary}{storage_options} =
        delete($config->{storage_options});
}

do {
    if (exists $config->{$_}) {
        Dancer::config()->{plugins}{Commentary}{$_} =
            delete($config->{$_});
    }
} for qw( akismet content_selector display_mode prefix recaptcha );

Dancer::config()->{plugins}{Commentary}{stylesheets} = [
    '/app-commentary/assets/css/jekyll/jekyll.css'
];

# TODO: Pass any other configuration options to Dancer?

Dancer::set(charset => 'UTF-8');

if ($options{debug}) {
    Dancer::set(logger => 'console');
    Dancer::set(show_errors => 1);
    Dancer::set(session => 'Simple');
    Dancer::load_app('App::Commentary');
    Dancer::dance();
}
else {
    # FIXME: Set session
    Dancer::load_app('App::Commentary');
    $ENV{PLACK_ENV} = 'PSGI';
    Plack::Loader->load('Twiggy', port => $options{port})->run(Dancer::dance());
}
